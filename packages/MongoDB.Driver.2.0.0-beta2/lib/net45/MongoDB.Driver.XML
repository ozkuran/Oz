<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>MongoDB.Driver</name>
  </assembly>
  <members>
    <member name="T:MongoDB.Driver.AggregateOptions">
      <summary>
            Options for an aggregate operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.AggregateOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.AggregateOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:MongoDB.Driver.AggregateOptions`1">
      <summary>
            Options for an aggregate operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.AggregateOptions`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.AggregateOptions`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.AggregateOptionsBase">
      <summary>
            Options for an aggregate operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.AggregateOptionsBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.AggregateOptionsBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateOptionsBase.AllowDiskUse">
      <summary>
            Gets or sets a value indicating whether to allow disk use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateOptionsBase.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateOptionsBase.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateOptionsBase.UseCursor">
      <summary>
            Gets or sets a value indicating whether to use a cursor.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteError">
      <summary>
            Represents the details of a write error for a particular request.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteError.Index">
      <summary>
            Gets the index of the request that had an error.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteOptions">
      <summary>
            Options for a bulk write operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteOptions" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteOptions.IsOrdered">
      <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteResult">
      <summary>
            Represents the result of a bulk write operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteResult.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.RequestCount">
      <summary>
            Gets the request count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteResult`1">
      <summary>
            Represents the result of a bulk write operation.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteResult`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="processedRequests">The processed requests.</param>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.ProcessedRequests">
      <summary>
            Gets the processed requests.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged">
      <summary>
            Result from an acknowledged write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteResult`1.Acknowledged.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteUpsert})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="matchedCount">The matched count.</param>
      <param name="deletedCount">The deleted count.</param>
      <param name="insertedCount">The inserted count.</param>
      <param name="modifiedCount">The modified count.</param>
      <param name="processedRequests">The processed requests.</param>
      <param name="upserts">The upserts.</param>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged">
      <summary>
            Result from an unacknowledged write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="processedRequests">The processed requests.</param>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteUpsert">
      <summary>
            Represents the information about one Upsert.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteUpsert.Id">
      <summary>
            Gets the id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteUpsert.Index">
      <summary>
            Gets the index.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ConnectionMode">
      <summary>
            Server connection mode.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ConnectionMode.Automatic">
      <summary>
            Automatically determine how to connect.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ConnectionMode.Direct">
      <summary>
            Connect directly to a server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ConnectionMode.ReplicaSet">
      <summary>
            Connect to a replica set.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ConnectionMode.ShardRouter">
      <summary>
            Connect to one or more shard routers.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ConnectionMode.Standalone">
      <summary>
            Connect to a standalone server.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CountOptions">
      <summary>
            Options for a count operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CountOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.CountOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.CountOptions.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountOptions.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountOptions.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountOptions.Skip">
      <summary>
            Gets or sets the skip.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CreateCollectionOptions">
      <summary>
            Options for creating a collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CreateCollectionOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.CreateCollectionOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.AutoIndexId">
      <summary>
            Gets or sets a value indicating whether to automatically create an index on the _id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.Capped">
      <summary>
            Gets or sets a value indicating whether the collection is capped.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxDocuments">
      <summary>
            Gets or sets the maximum number of documents (used with capped collections).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxSize">
      <summary>
            Gets or sets the maximum size of the collection (used with capped collections).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.StorageEngine">
      <summary>
            Gets or sets the storage engine options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateCollectionOptions.UsePowerOf2Sizes">
      <summary>
            Gets or sets a value indicating whether to use power of 2 sizes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CreateIndexOptions">
      <summary>
            Options for creating an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CreateIndexOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.CreateIndexOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Background">
      <summary>
            Gets or sets a value indicating whether to create the index in the background.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Bits">
      <summary>
            Gets or sets the precision, in bits, used with geohash indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.BucketSize">
      <summary>
            Gets or sets the size of a geohash bucket.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.DefaultLanguage">
      <summary>
            Gets or sets the default language.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.ExpireAfter">
      <summary>
            Gets or sets when documents expire (used with TTL indexes).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.LanguageOverride">
      <summary>
            Gets or sets the language override.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Max">
      <summary>
            Gets or sets the max value for 2d indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Min">
      <summary>
            Gets or sets the min value for 2d indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Name">
      <summary>
            Gets or sets the index name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Sparse">
      <summary>
            Gets or sets a value indicating whether the index is a sparse index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.SphereIndexVersion">
      <summary>
            Gets or sets the index version for 2dsphere indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.StorageEngine">
      <summary>
            Gets or sets the storage engine options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.TextIndexVersion">
      <summary>
            Gets or sets the index version for text indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Unique">
      <summary>
            Gets or sets a value indicating whether the index is a unique index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Version">
      <summary>
            Gets or sets the version of the index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CreateIndexOptions.Weights">
      <summary>
            Gets or sets the weights for text indexes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CursorType">
      <summary>
            The cursor type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CursorType.NonTailable">
      <summary>
            A non-tailable cursor. This is sufficient for a vast majority of uses.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CursorType.Tailable">
      <summary>
            A tailable cursor.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CursorType.TailableAwait">
      <summary>
            A tailable cursor with a built-in server sleep.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DeleteManyModel`1">
      <summary>
            Model for deleting many documents.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.DeleteManyModel`1.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteManyModel`1" /> class.
            </summary>
      <param name="filter">The filter.</param>
    </member>
    <member name="P:MongoDB.Driver.DeleteManyModel`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteManyModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DeleteOneModel`1">
      <summary>
            Model for deleting a single document.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.DeleteOneModel`1.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteOneModel`1" /> class.
            </summary>
      <param name="filter">The filter.</param>
    </member>
    <member name="P:MongoDB.Driver.DeleteOneModel`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteOneModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DeleteResult">
      <summary>
            The result of a delete operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DeleteResult.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.DeletedCount">
      <summary>
            Gets the deleted count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DeleteResult.Acknowledged">
      <summary>
            The result of an acknowledged delete operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DeleteResult.Acknowledged.#ctor(System.Int64)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult.Acknowledged" /> class.
            </summary>
      <param name="deletedCount">The deleted count.</param>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.DeletedCount">
      <summary>
            Gets the deleted count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DeleteResult.Unacknowledged">
      <summary>
            The result of an unacknowledged delete operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.DeletedCount">
      <summary>
            Gets the deleted count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DistinctOptions`1">
      <summary>
            Options for the distinct command.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.DistinctOptions`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.DistinctOptions`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctOptions`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ExternalEvidence">
      <summary>
            Evidence of a MongoIdentity via an external mechanism.  For example, on windows this may 
            be the current process' user or, on linux, via kinit.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ExternalEvidence.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExternalEvidence" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ExternalEvidence.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.ExternalEvidence.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="T:MongoDB.Driver.FindOneAndDeleteOptions`1">
      <summary>
            Options for a findAndModify command to delete an object.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.FindOneAndDeleteOptions`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindOneAndDeleteOptions`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`1.Sort">
      <summary>
            Gets or sets the sort.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOneAndReplaceOptions`1">
      <summary>
            Options for a findAndModify command to replace an object.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.FindOneAndReplaceOptions`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndReplaceOptions`1" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.ReturnDocument">
      <summary>
            Gets or sets which version of the document to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`1.Sort">
      <summary>
            Gets or sets the sort.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOneAndUpdateOptions`1">
      <summary>
            Options for a findAndModify command to update an object.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.FindOneAndUpdateOptions`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndUpdateOptions`1" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.ReturnDocument">
      <summary>
            Gets or sets which version of the document to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`1.Sort">
      <summary>
            Gets or sets the sort.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOptions">
      <summary>
            Options for finding documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOptions`1">
      <summary>
            Options for finding documents.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.FindOptions`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindOptions`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptions`1.Limit">
      <summary>
            Gets or sets how many documents to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptions`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptions`1.Skip">
      <summary>
            Gets or sets how many documents to skip before returning the rest.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptions`1.Sort">
      <summary>
            Gets or sets the sort.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOptionsBase">
      <summary>
            Options for a find operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindOptionsBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOptionsBase" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.AllowPartialResults">
      <summary>
            Gets or sets a value indicating whether to allow partial results when some shards are unavailable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.CursorType">
      <summary>
            Gets or sets the type of the cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.Modifiers">
      <summary>
            Gets or sets the modifiers.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOptionsBase.NoCursorTimeout">
      <summary>
            Gets or sets whether a cursor will time out.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IAggregateFluent`2">
      <summary>
            Fluent interface for aggregate.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.AppendStage(System.Object)">
      <summary>
            Appends a stage to the pipeline.
            </summary>
      <param name="stage">The stage.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="P:MongoDB.Driver.IAggregateFluent`2.Collection">
      <summary>
            Gets the collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.GeoNear(System.Object)">
      <summary>
            Appends a geoNear stage to the pipeline.
            </summary>
      <param name="geoNear">The geo near options.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Group``1(System.Object)">
      <summary>
            Appends a group stage to the pipeline.
            </summary>
      <param name="group">The group expressions.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Group``1(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Appends a group stage to the pipeline.
            </summary>
      <param name="group">The group expressions.</param>
      <param name="resultSerializer">The result serializer.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Limit(System.Int32)">
      <summary>
            Appends a limit stage to the pipeline.
            </summary>
      <param name="limit">The limit.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Match(System.Object)">
      <summary>
            Appends a match stage to the pipeline.
            </summary>
      <param name="filter">The filter.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="P:MongoDB.Driver.IAggregateFluent`2.Options">
      <summary>
            Gets the options.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.OutAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
      <param name="collectionName">Name of the collection.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="P:MongoDB.Driver.IAggregateFluent`2.Pipeline">
      <summary>
            Gets the pipeline.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Project``1(System.Object)">
      <summary>
            Appends a project stage to the pipeline.
            </summary>
      <param name="project">The project specifications.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Project``1(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Appends a project stage to the pipeline.
            </summary>
      <param name="project">The project specifications.</param>
      <param name="resultSerializer">The result serializer.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Redact(System.Object)">
      <summary>
            Appends a redact stage to the pipeline.
            </summary>
      <param name="redact">The redact expression.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Skip(System.Int32)">
      <summary>
            Appends a skip stage to the pipeline.
            </summary>
      <param name="skip">The number of documents to skip.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Sort(System.Object)">
      <summary>
            Appends a sort stage to the pipeline.
            </summary>
      <param name="sort">The sort specification.</param>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Unwind``1(System.String)">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="fieldName">The name of the field to unwind.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluent`2.Unwind``1(System.String,MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="fieldName">The name of the field to unwind.</param>
      <param name="resultSerializer">The result serializer.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="T:MongoDB.Driver.IAggregateFluentExtensions">
      <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IAggregateFluent`2" /></summary>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstAsync``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of the aggregate result.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstOrDefaultAsync``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of the aggregate result, or the default value if the result set is empty.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``4(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}})">
      <summary>
            Appends a group stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="idProjector">The identifier projector.</param>
      <param name="groupProjector">The group projector.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <typeparam name="TKey">The type of the key.</typeparam>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Object)">
      <summary>
            Appends a group stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="group">The group expressions.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Match``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
      <summary>
            Appends a match stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="filter">The filter.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``3(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
      <summary>
            Appends a project stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="project">The project specifications.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Object)">
      <summary>
            Appends a project stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="project">The project specifications.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleAsync``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of the aggregate result. Throws an exception if the result set does not contain exactly one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleOrDefaultAsync``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of the aggregate result, or the default value if the result set is empty. Throws an exception if the result set contains more than one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortBy``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Appends an ascending sort stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to sort by.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortByDescending``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Appends a descending sort stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to sort by.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenBy``2(MongoDB.Driver.IOrderedAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Modifies the current sort stage by appending an ascending field specification to it.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to sort by.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenByDescending``2(MongoDB.Driver.IOrderedAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Modifies the current sort stage by appending a descending field specification to it.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to sort by.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to unwind.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``3(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to unwind.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``3(MongoDB.Driver.IAggregateFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field to unwind.</param>
      <param name="resultSerializer">The result serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0,``1},System.String)">
      <summary>
            Appends an unwind stage to the pipeline.
            </summary>
      <param name="source">The source.</param>
      <param name="fieldName">The name of the field to unwind.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent aggregate interface.</returns>
    </member>
    <member name="T:MongoDB.Driver.IFindFluent`2">
      <summary>
            Fluent interface for find.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.IFindFluent`2.Collection">
      <summary>
            Gets the collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.CountAsync(System.Threading.CancellationToken)">
      <summary>
            Counts the asynchronous.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="P:MongoDB.Driver.IFindFluent`2.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.Limit(System.Nullable{System.Int32})">
      <summary>
            Limits the specified limit.
            </summary>
      <param name="limit">The limit.</param>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="P:MongoDB.Driver.IFindFluent`2.Options">
      <summary>
            Gets the options.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.Projection``1(System.Object)">
      <summary>
            Projections the specified projection.
            </summary>
      <param name="projection">The projection.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.Projection``1(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Projections the specified projection.
            </summary>
      <param name="projection">The projection.</param>
      <param name="resultSerializer">The result serializer.</param>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.Skip(System.Nullable{System.Int32})">
      <summary>
            Skips the specified skip.
            </summary>
      <param name="skip">The skip.</param>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluent`2.Sort(System.Object)">
      <summary>
            Sorts the specified sort.
            </summary>
      <param name="sort">The sort.</param>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="T:MongoDB.Driver.IFindFluentExtensions">
      <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IFindFluent`2" /></summary>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Firsts the asynchronous.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Firsts the or default asynchronous.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.Projection``3(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
      <summary>
            Projections the specified source.
            </summary>
      <param name="source">The source.</param>
      <param name="projection">The projection.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <typeparam name="TNewResult">The type of the new result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.Projection``2(MongoDB.Driver.IFindFluent{``0,``1},System.Object)">
      <summary>
            Projections the specified source.
            </summary>
      <param name="source">The source.</param>
      <param name="projection">The projection.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Singles the asynchronous.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Singles the or default asynchronous.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.SortBy``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Sorts the by.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.SortByDescending``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Sorts the by descending.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenBy``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Thens the by.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenByDescending``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}})">
      <summary>
            Thens the by descending.
            </summary>
      <param name="source">The source.</param>
      <param name="field">The field.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The fluent find interface.</returns>
    </member>
    <member name="T:MongoDB.Driver.IMongoClient">
      <summary>
            The client interface to MongoDB.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IMongoClient.Cluster">
      <summary>
            Gets the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Drops the database with the specified name.
            </summary>
      <param name="name">The name of the database to drop.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoClient.GetDatabase(System.String)">
      <summary>
            Gets a database.
            </summary>
      <param name="name">The name of the database.</param>
      <returns>An implementation of a database.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
      <summary>
            Gets a database.
            </summary>
      <param name="name">The name of the database.</param>
      <param name="settings">The database settings.</param>
      <returns>An implementation of a database.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
      <summary>
            Lists the databases on the server.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoClient.Settings">
      <summary>
            Gets the settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoCollection`1">
      <summary>
            Represents a collection in MongoDB.
            </summary>
      <typeparam name="TDocument">The type of the documents stored in the collection.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.Aggregate(MongoDB.Driver.AggregateOptions)">
      <summary>
            Begins a fluent aggregation interface.
            </summary>
      <param name="options">The options.</param>
      <returns>A fluent aggregate interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateAsync``1(System.Collections.Generic.IEnumerable{System.Object},MongoDB.Driver.AggregateOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Runs an aggregation pipeline.
            </summary>
      <param name="pipeline">The pipeline.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
      <summary>
            Performs multiple write operations.
            </summary>
      <param name="requests">The requests.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of writing.</returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoCollection`1.CollectionNamespace">
      <summary>
            Gets the namespace of the collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.CountAsync(System.Object,MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
      <summary>
            Counts the number of documents in the collection.
            </summary>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The number of documents in the collection.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(System.Object,System.Threading.CancellationToken)">
      <summary>
            Deletes multiple documents.
            </summary>
      <param name="filter">The filter.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the delete operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(System.Object,System.Threading.CancellationToken)">
      <summary>
            Deletes a single document.
            </summary>
      <param name="filter">The filter.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the delete operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctAsync``1(System.String,System.Object,MongoDB.Driver.DistinctOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Gets the distinct values for a specified field.
            </summary>
      <param name="fieldName">The name of the field.</param>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.Find(System.Object,MongoDB.Driver.FindOptions)">
      <summary>
            Begins a fluent find interface.
            </summary>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <returns>A fluent find interface.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindAsync``1(System.Object,MongoDB.Driver.FindOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds the documents matching the filter.
            </summary>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync(System.Object,MongoDB.Driver.FindOneAndDeleteOptions{`0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and deletes it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The deleted document if one was deleted.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync``1(System.Object,MongoDB.Driver.FindOneAndDeleteOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and deletes it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync(System.Object,`0,MongoDB.Driver.FindOneAndReplaceOptions{`0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and replaces it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync``1(System.Object,`0,MongoDB.Driver.FindOneAndReplaceOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and replaces it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync(System.Object,System.Object,MongoDB.Driver.FindOneAndUpdateOptions{`0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync``1(System.Object,System.Object,MongoDB.Driver.FindOneAndUpdateOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoCollection`1.IndexManager">
      <summary>
            Gets the index manager.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
      <summary>
            Inserts many documents.
            </summary>
      <param name="documents">The documents.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the insert operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(`0,System.Threading.CancellationToken)">
      <summary>
            Inserts a single document.
            </summary>
      <param name="document">The document.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the insert operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduceAsync``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Executes a map-reduce command.
            </summary>
      <param name="map">The map function.</param>
      <param name="reduce">The reduce function.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(System.Object,`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Replaces a single document.
            </summary>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the replacement.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoCollection`1.Settings">
      <summary>
            Gets the settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateManyAsync(System.Object,System.Object,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates many documents.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOneAsync(System.Object,System.Object,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates a single document.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.WithReadPreference(MongoDB.Driver.ReadPreference)">
      <summary>
            Returns a new collection with a different read preference.
            </summary>
      <param name="readPreference">The read preference.</param>
      <returns>A new collection.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollection`1.WithWriteConcern(MongoDB.Driver.WriteConcern)">
      <summary>
            Returns a new collection with a different write concern.
            </summary>
      <param name="writeConcern">The write concern.</param>
      <returns>A new collection.</returns>
    </member>
    <member name="T:MongoDB.Driver.IMongoCollectionExtensions">
      <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
      <summary>
            Counts the number of documents in the collection.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The number of documents in the collection.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
            Deletes multiple documents.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the delete operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
            Deletes a single document.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the delete operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions{``1},System.Threading.CancellationToken)">
      <summary>
            Gets the distinct values for a specified field.
            </summary>
      <param name="collection">The collection.</param>
      <param name="field">The field.</param>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TField">The type of the result.</typeparam>
      <returns>
            The distinct values for the specified field.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            Begins a fluent find interface.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            A fluent interface.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and deletes it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The deleted document if one was deleted.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``1},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and deletes it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and replaces it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``1},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and replaces it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{MongoDB.Driver.Builders.UpdateBuilder{``0},MongoDB.Driver.Builders.UpdateBuilder{``0}},MongoDB.Driver.FindOneAndUpdateOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{MongoDB.Driver.Builders.UpdateBuilder{``0},MongoDB.Driver.Builders.UpdateBuilder{``0}},MongoDB.Driver.FindOneAndUpdateOptions{``1},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object,MongoDB.Driver.FindOneAndUpdateOptions{``0},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object,MongoDB.Driver.FindOneAndUpdateOptions{``1},System.Threading.CancellationToken)">
      <summary>
            Finds a single document and updates it atomically.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>
            The returned document.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Replaces a single document.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the replacement.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{MongoDB.Driver.Builders.UpdateBuilder{``0},MongoDB.Driver.Builders.UpdateBuilder{``0}},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates a single document.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates many documents.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{MongoDB.Driver.Builders.UpdateBuilder{``0},MongoDB.Driver.Builders.UpdateBuilder{``0}},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates a single document.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
      <summary>
            Updates a single document.
            </summary>
      <param name="collection">The collection.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>
            The result of the update operation.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.IMongoDatabase">
      <summary>
            Representats a database in MongoDB.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollectionAsync(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
      <summary>
            Creates the collection with the specified name.
            </summary>
      <param name="name">The name.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoDatabase.DatabaseNamespace">
      <summary>
            Gets the namespace of the database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Drops the collection with the specified name.
            </summary>
      <param name="name">The name of the collection to drop.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.GetCollection``1(System.String)">
      <summary>
            Gets a collection.
            </summary>
      <param name="name">The name of the collection.</param>
      <typeparam name="TDocument">The document type.</typeparam>
      <returns>An implementation of a collection.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Gets a collection.
            </summary>
      <param name="name">The name of the collection.</param>
      <param name="settings">The settings.</param>
      <typeparam name="TDocument">The document type.</typeparam>
      <returns>An implementation of a collection.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionsAsync(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
      <summary>
            Lists all the collections on the server.
            </summary>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollectionAsync(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
      <summary>
            Renames the collection.
            </summary>
      <param name="oldName">The old name.</param>
      <param name="newName">The new name.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoDatabase.RunCommandAsync``1(System.Object,MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
      <summary>
            Runs a command.
            </summary>
      <param name="command">The command.</param>
      <param name="readPreference">The read preference.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="T">The result type of the command.</typeparam>
      <returns>
            The result of the command.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoDatabase.Settings">
      <summary>
            Gets the settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoFields">
      <summary>
            A marker interface that represents a list of fields (see FieldsDocument and the Fields builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoIndexKeys">
      <summary>
            A marker interface that represents the keys of an index (see IndexKeysDocument and the IndexKeys builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoIndexManager`1">
      <summary>
            An interface representing methods used to create, delete and modify indexes.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.IMongoIndexManager`1.CollectionNamespace">
      <summary>
            Gets the namespace of the collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateIndexAsync(System.Object,MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
      <summary>
            Creates an index.
            </summary>
      <param name="keys">The keys.</param>
      <param name="options">The options.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropIndexAsync(System.Object,System.Threading.CancellationToken)">
      <summary>
            Drops an index.
            </summary>
      <param name="keys">The keys of the index to drop.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropIndexAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Drops an index.
            </summary>
      <param name="name">The name of the index to drop.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListIndexesAsync(System.Threading.CancellationToken)">
      <summary>
            Gets the indexes.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="P:MongoDB.Driver.IMongoIndexManager`1.Settings">
      <summary>
            Gets the collection settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoQuery">
      <summary>
            A marker interface that represents a query (see QueryDocument and the Query builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoSortBy">
      <summary>
            A marker interface that represents a sort order (see SortByDocument and the SortBy builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoUpdate">
      <summary>
            A marker interface that represents an update modifier (see UpdateDocument and the Update builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.InsertManyOptions">
      <summary>
            Options for inserting many documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.InsertManyOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertManyOptions" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.InsertManyOptions.IsOrdered">
      <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.InsertOneModel`1">
      <summary>
            Model for inserting a single document.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.InsertOneModel`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertOneModel`1" /> class.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="P:MongoDB.Driver.InsertOneModel`1.Document">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.InsertOneModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IOrderedAggregateFluent`2">
      <summary>
            Fluent interface for aggregate.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="T:MongoDB.Driver.IOrderedFindFluent`2">
      <summary>
            Fluent interface for find.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="T:MongoDB.Driver.ListCollectionsOptions">
      <summary>
            Options for a list collections operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ListCollectionsOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.ListCollectionsOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.ListCollectionsOptions.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MapReduceOptions`1">
      <summary>
            Represents the options for a map-reduce operation.
            </summary>
      <typeparam name="TResult">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TResult</parameter>
            <parameter>T:MongoDB.Driver.MapReduceOptions`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:MongoDB.Driver.MapReduceOptions`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.MapReduceOptions`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Finalize">
      <summary>
            Gets or sets the finalize function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.JavaScriptMode">
      <summary>
            Gets or sets the java script mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.OutputOptions">
      <summary>
            Gets or sets the output options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Scope">
      <summary>
            Gets or sets the scope.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Sort">
      <summary>
            Gets or sets the sort.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOptions`1.Verbose">
      <summary>
            Gets or sets whether to include timing information.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MapReduceOutputOptions">
      <summary>
            Represents the output options for a map-reduce operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceOutputOptions.Inline">
      <summary>
            An inline map-reduce output options.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MapReduceOutputOptions.Merge(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
            A merge map-reduce output options.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="databaseName">The name of the database.</param>
      <param name="sharded">Whether the output collection should be sharded.</param>
      <param name="nonAtomic">Whether the server should not lock the database for the duration of the merge.</param>
      <returns>A merge map-reduce output options.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceOutputOptions.Reduce(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
            A reduce map-reduce output options.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="databaseName">The name of the database.</param>
      <param name="sharded">Whether the output collection should be sharded.</param>
      <param name="nonAtomic">Whether the server should not lock the database for the duration of the reduce.</param>
      <returns>A reduce map-reduce output options.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceOutputOptions.Replace(System.String,System.String,System.Nullable{System.Boolean})">
      <summary>
            A replace map-reduce output options.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="databaseName">Name of the database.</param>
      <param name="sharded">Whether the output collection should be sharded.</param>
      <returns>A replace map-reduce output options.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoBulkWriteException">
      <summary>
            Represents a bulk write exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="writeErrors">The write errors.</param>
      <param name="writeConcernError">The write concern error.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteConcernError">
      <summary>
            Gets the write concern error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteErrors">
      <summary>
            Gets the write errors.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoBulkWriteException`1">
      <summary>
            Represents a bulk write exception.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException`1.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.BulkWriteResult{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="result">The result.</param>
      <param name="writeErrors">The write errors.</param>
      <param name="writeConcernError">The write concern error.</param>
      <param name="unprocessedRequests">The unprocessed requests.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoBulkWriteException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoBulkWriteException`1.Result">
      <summary>
            Gets the result of the bulk write operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoBulkWriteException`1.UnprocessedRequests">
      <summary>
            Gets the unprocessed requests.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoClient">
      <summary>Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.</summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.#ctor">
      <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoClientSettings)">
      <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
      <param name="settings">The settings.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoUrl)">
      <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
      <param name="connectionString">The connection string.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoClient.Cluster">
      <summary>
            Gets the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Drops the database with the specified name.
            </summary>
      <param name="name">The name of the database to drop.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A task.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.GetDatabase(System.String)">
      <summary>
            Gets a database.
            </summary>
      <param name="name">The name of the database.</param>
      <returns>An implementation of a database.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
      <summary>
            Gets a database.
            </summary>
      <param name="name">The name of the database.</param>
      <param name="settings">The database settings.</param>
      <returns>An implementation of a database.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
      <summary>
            Lists the databases on the server.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoClient.Settings">
      <summary>
            Gets the settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoClientSettings">
      <summary>
            The settings for a MongoDB client.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.#ctor">
      <summary>
            Creates a new instance of MongoClientSettings. Usually you would use a connection string instead.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.Clone">
      <summary>
            Creates a clone of the settings.
            </summary>
      <returns>A clone of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ClusterConfigurator">
      <summary>
            Gets or sets the cluster configurator.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ConnectionMode">
      <summary>
            Gets or sets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.Credentials">
      <summary>
            Gets or sets the credentials.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.Equals(MongoDB.Driver.MongoClientSettings)">
      <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:MongoDB.Driver.MongoClientSettings" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.FromUrl(MongoDB.Driver.MongoUrl)">
      <summary>
            Gets a MongoClientSettings object intialized with values from a MongoURL.
            </summary>
      <param name="url">The MongoURL.</param>
      <returns>A MongoClientSettings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.FrozenCopy">
      <summary>
            Returns a frozen copy of the settings.
            </summary>
      <returns>A frozen copy of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.GuidRepresentation">
      <summary>
            Gets or sets the representation to use for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.IPv6">
      <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.IsFrozen">
      <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.LocalThreshold">
      <summary>
            Gets or sets the local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionIdleTime">
      <summary>
            Gets or sets the max connection idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionLifeTime">
      <summary>
            Gets or sets the max connection life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionPoolSize">
      <summary>
            Gets or sets the max connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.MinConnectionPoolSize">
      <summary>
            Gets or sets the min connection pool size.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.op_Equality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings" /> instances are equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.op_Inequality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings" /> instances are not equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.OperationTimeout">
      <summary>
            Gets or sets the operation timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ReadEncoding">
      <summary>
            Gets or sets the Read Encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ReadPreference">
      <summary>
            Gets or sets the read preferences.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.ReplicaSetName">
      <summary>
            Gets or sets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.Server">
      <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.Servers">
      <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.SocketTimeout">
      <summary>
            Gets or sets the socket timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.SslSettings">
      <summary>
            Gets or sets the SSL settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientSettings.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.UseSsl">
      <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.VerifySslCertificate">
      <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueSize">
      <summary>
            Gets or sets the wait queue size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueTimeout">
      <summary>
            Gets or sets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoClientSettings.WriteEncoding">
      <summary>
            Gets or sets the Write Encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoCollectionSettings">
      <summary>
            The settings used to access a collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor">
      <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.AssignIdOnInsert">
      <summary>
            Gets or sets a value indicating whether the driver should assign Id values when missing.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.Clone">
      <summary>
            Creates a clone of the settings.
            </summary>
      <returns>A clone of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.Equals(System.Object)">
      <summary>
            Compares two MongoCollectionSettings instances.
            </summary>
      <param name="obj">The other instance.</param>
      <returns>True if the two instances are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.FrozenCopy">
      <summary>
            Returns a frozen copy of the settings.
            </summary>
      <returns>A frozen copy of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.GuidRepresentation">
      <summary>
            Gets or sets the representation used for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.IsFrozen">
      <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.OperationTimeout">
      <summary>
            Gets or sets the operation timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadEncoding">
      <summary>
            Gets or sets the Read Encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadPreference">
      <summary>
            Gets or sets the read preference to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.SerializerRegistry">
      <summary>
            Gets the serializer registry.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollectionSettings.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteEncoding">
      <summary>
            Gets or sets the Write Encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoCredential">
      <summary>
            Credential to access a MongoDB database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.#ctor(System.String,MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentityEvidence)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCredential" /> class.
            </summary>
      <param name="mechanism">Mechanism to authenticate with.</param>
      <param name="identity">The identity.</param>
      <param name="evidence">The evidence.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.Security.SecureString)">
      <summary>
            Creates a default credential.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A default credential.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.String)">
      <summary>
            Creates a default credential.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A default credential.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String)">
      <summary>
            Creates a GSSAPI credential.
            </summary>
      <param name="username">The username.</param>
      <returns>A credential for GSSAPI.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.Security.SecureString)">
      <summary>
            Creates a GSSAPI credential.
            </summary>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for GSSAPI.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.String)">
      <summary>
            Creates a GSSAPI credential.
            </summary>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for GSSAPI.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.Security.SecureString)">
      <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for MONGODB-CR.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.String)">
      <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for MONGODB-CR.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreateMongoX509Credential(System.String)">
      <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
      <param name="username">The username.</param>
      <returns>A credential for MONGODB-X509.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.Security.SecureString)">
      <summary>
            Creates a PLAIN credential.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for PLAIN.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.String)">
      <summary>
            Creates a PLAIN credential.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>A credential for PLAIN.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.Equals(MongoDB.Driver.MongoCredential)">
      <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
      <param name="rhs">The other credential.</param>
      <returns>True if the two credentials are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.Equals(System.Object)">
      <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
      <param name="obj">The other credential.</param>
      <returns>True if the two credentials are equal.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Evidence">
      <summary>
            Gets the evidence.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.GetHashCode">
      <summary>
            Gets the hashcode for the credential.
            </summary>
      <returns>The hashcode.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.GetMechanismProperty``1(System.String,``0)">
      <summary>
            Gets the mechanism property.
            </summary>
      <param name="key">The key.</param>
      <param name="defaultValue">The default value.</param>
      <typeparam name="T">The type of the mechanism property.</typeparam>
      <returns>The mechanism property if one was set; otherwise the default value.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Identity">
      <summary>
            Gets the identity.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Mechanism">
      <summary>
            Gets the mechanism to authenticate with.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.op_Equality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
      <summary>
            Compares two MongoCredentials.
            </summary>
      <param name="lhs">The first MongoCredential.</param>
      <param name="rhs">The other MongoCredential.</param>
      <returns>True if the two MongoCredentials are equal (or both null).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.op_Inequality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
      <summary>
            Compares two MongoCredentials.
            </summary>
      <param name="lhs">The first MongoCredential.</param>
      <param name="rhs">The other MongoCredential.</param>
      <returns>True if the two MongoCredentials are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Password">
      <summary>
            Gets the password.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Source">
      <summary>
            Gets the source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.ToString">
      <summary>
            Returns a string representation of the credential.
            </summary>
      <returns>A string representation of the credential.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCredential.Username">
      <summary>
            Gets the username.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCredential.WithMechanismProperty(System.String,System.Object)">
      <summary>
            Creates a new MongoCredential with the specified mechanism property.
            </summary>
      <param name="key">The key.</param>
      <param name="value">The value.</param>
      <returns>A new MongoCredential with the specified mechanism property.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoDatabaseSettings">
      <summary>
            The settings used to access a database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.#ctor">
      <summary>
            Creates a new instance of MongoDatabaseSettings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.Clone">
      <summary>
            Creates a clone of the settings.
            </summary>
      <returns>A clone of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.Equals(System.Object)">
      <summary>
            Compares two MongoDatabaseSettings instances.
            </summary>
      <param name="obj">The other instance.</param>
      <returns>True if the two instances are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.FrozenCopy">
      <summary>
            Returns a frozen copy of the settings.
            </summary>
      <returns>A frozen copy of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.GuidRepresentation">
      <summary>
            Gets or sets the representation to use for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.IsFrozen">
      <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.OperationTimeout">
      <summary>
            Gets or sets the operation timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadEncoding">
      <summary>
            Gets or sets the Read Encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.SerializerRegistry">
      <summary>
            Gets the serializer registry.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabaseSettings.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteEncoding">
      <summary>
            Gets or sets the Write Encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoDBRef">
      <summary>
            Represents a DBRef (a convenient way to refer to a document).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Creates a MongoDBRef.
            </summary>
      <param name="collectionName">The name of the collection that contains the document.</param>
      <param name="id">The Id of the document.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Creates a MongoDBRef.
            </summary>
      <param name="databaseName">The name of the database that contains the document.</param>
      <param name="collectionName">The name of the collection that contains the document.</param>
      <param name="id">The Id of the document.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoDBRef.CollectionName">
      <summary>
            Gets the name of the collection that contains the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDBRef.DatabaseName">
      <summary>
            Gets the name of the database that contains the document.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef)">
      <summary>
            Determines whether this instance and another specified MongoDBRef object have the same value.
            </summary>
      <param name="rhs">The MongoDBRef object to compare to this instance.</param>
      <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
      <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.Equals(System.Object)">
      <summary>
            Determines whether this instance and a specified object, which must also be a MongoDBRef object, have the same value.
            </summary>
      <param name="obj">The MongoDBRef object to compare to this instance.</param>
      <returns>True if obj is a MongoDBRef object and its value is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.GetHashCode">
      <summary>
            Returns the hash code for this MongoDBRef object.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDBRef.Id">
      <summary>
            Gets the Id of the document.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.op_Equality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
      <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.op_Inequality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
      <summary>
            Determines whether two specified MongoDBRef objects have different values.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRef.ToString">
      <summary>
            Returns a string representation of the value.
            </summary>
      <returns>A string representation of the value.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoDBRefSerializer">
      <summary>
            Represents a serializer for MongoDBRefs.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRefSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDBRefSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRefSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRefSerializer.GetMemberSerializationInfo(System.String)">
      <summary>
            Gets the serialization info for a member.
            </summary>
      <param name="memberName">The member name.</param>
      <returns>The serialization info for the member.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDBRefSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.MongoDBRef)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoDefaults">
      <summary>
            Default values for various Mongo settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.AssignIdOnInsert">
      <summary>
            Gets or sets whether the driver should assign a value to empty Ids on Insert.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.AuthenticationMechanism">
      <summary>
            Gets or sets the default authentication mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.ComputedWaitQueueSize">
      <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.GuidRepresentation">
      <summary>
            Gets or sets the representation to use for Guids (this is an alias for BsonDefaults.GuidRepresentation).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.LocalThreshold">
      <summary>
            Gets or sets the default local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxBatchCount">
      <summary>
            Gets or sets the maximum batch count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionIdleTime">
      <summary>
            Gets or sets the max connection idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionLifeTime">
      <summary>
            Gets or sets the max connection life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionPoolSize">
      <summary>
            Gets or sets the max connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxDocumentSize">
      <summary>
            Gets or sets the max document size
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MaxMessageLength">
      <summary>
            Gets or sets the max message length.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.MinConnectionPoolSize">
      <summary>
            Gets or sets the min connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.OperationTimeout">
      <summary>
            Gets or sets the operation timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.ReadEncoding">
      <summary>
            Gets or sets the Read Encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.SocketTimeout">
      <summary>
            Gets or sets the socket timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.TcpReceiveBufferSize">
      <summary>
            Gets or sets the TCP receive buffer size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.TcpSendBufferSize">
      <summary>
            Gets or sets the TCP send buffer size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueMultiple">
      <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize, see also WaitQueueSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueSize">
      <summary>
            Gets or sets the wait queue size (see also WaitQueueMultiple).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueTimeout">
      <summary>
            Gets or sets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoDefaults.WriteEncoding">
      <summary>
            Gets or sets the Write Encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoExternalIdentity">
      <summary>
            Represents an identity defined outside of mongodb.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
      <param name="username">The username.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
      <param name="source">The source.</param>
      <param name="username">The username.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoIdentity">
      <summary>
            Represents an identity in MongoDB.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentity.Equals(MongoDB.Driver.MongoIdentity)">
      <summary>
            Determines whether the specified instance is equal to this instance.
            </summary>
      <param name="rhs">The right-hand side.</param>
      <returns>
        <c>true</c> if the specified instance is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentity.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentity.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentity.op_Equality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
      <summary>
            Compares two MongoIdentity values.
            </summary>
      <param name="lhs">The first MongoIdentity.</param>
      <param name="rhs">The other MongoIdentity.</param>
      <returns>True if the two MongoIdentity values are equal (or both null).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentity.op_Inequality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
      <summary>
            Compares two MongoIdentity values.
            </summary>
      <param name="lhs">The first MongoIdentity.</param>
      <param name="rhs">The other MongoIdentity.</param>
      <returns>True if the two MongoIdentity values are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoIdentity.Source">
      <summary>
            Gets the source.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoIdentity.Username">
      <summary>
            Gets the username.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoIdentityEvidence">
      <summary>
            Evidence used as proof of a MongoIdentity.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentityEvidence.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentityEvidence.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Equality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
      <summary>
            Compares two MongoIdentityEvidences.
            </summary>
      <param name="lhs">The first MongoIdentityEvidence.</param>
      <param name="rhs">The other MongoIdentityEvidence.</param>
      <returns>True if the two MongoIdentityEvidences are equal (or both null).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Inequality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
      <summary>
            Compares two MongoIdentityEvidences.
            </summary>
      <param name="lhs">The first MongoIdentityEvidence.</param>
      <param name="rhs">The other MongoIdentityEvidence.</param>
      <returns>True if the two MongoIdentityEvidences are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoInternalIdentity">
      <summary>
            Represents an identity defined inside mongodb.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoInternalIdentity.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalIdentity" /> class.
            </summary>
      <param name="databaseName">Name of the database.</param>
      <param name="username">The username.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoServerAddress">
      <summary>
            The address of a MongoDB server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String)">
      <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
      <param name="host">The server's host name.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String,System.Int32)">
      <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
      <param name="host">The server's host name.</param>
      <param name="port">The server's port number.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.Equals(MongoDB.Driver.MongoServerAddress)">
      <summary>
            Compares two server addresses.
            </summary>
      <param name="rhs">The other server address.</param>
      <returns>True if the two server addresses are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.Equals(System.Object)">
      <summary>
            Compares two server addresses.
            </summary>
      <param name="obj">The other server address.</param>
      <returns>True if the two server addresses are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.GetHashCode">
      <summary>
            Gets the hash code for this object.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerAddress.Host">
      <summary>
            Gets the server's host name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.op_Equality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
      <summary>
            Compares two server addresses.
            </summary>
      <param name="lhs">The first address.</param>
      <param name="rhs">The other address.</param>
      <returns>True if the two addresses are equal (or both are null).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.op_Inequality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
      <summary>
            Compares two server addresses.
            </summary>
      <param name="lhs">The first address.</param>
      <param name="rhs">The other address.</param>
      <returns>True if the two addresses are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.Parse(System.String)">
      <summary>
            Parses a string representation of a server address.
            </summary>
      <param name="value">The string representation of a server address.</param>
      <returns>A new instance of MongoServerAddress initialized with values parsed from the string.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerAddress.Port">
      <summary>
            Gets the server's port number.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.ToString">
      <summary>
            Returns a string representation of the server address.
            </summary>
      <returns>A string representation of the server address.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerAddress.TryParse(System.String,MongoDB.Driver.MongoServerAddress@)">
      <summary>
            Tries to parse a string representation of a server address.
            </summary>
      <param name="value">The string representation of a server address.</param>
      <param name="address">The server address (set to null if TryParse fails).</param>
      <returns>True if the string is parsed succesfully.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoUrl">
      <summary>
            Represents an immutable URL style connection string. See also MongoUrlBuilder.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.#ctor(System.String)">
      <summary>
            Creates a new instance of MongoUrl.
            </summary>
      <param name="url">The URL containing the settings.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanism">
      <summary>
            Gets the authentication mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanismProperties">
      <summary>
            Gets the authentication mechanism properties.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.AuthenticationSource">
      <summary>
            Gets the authentication source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.ClearCache">
      <summary>
            Clears the URL cache. When a URL is parsed it is stored in the cache so that it doesn't have to be
            parsed again. There is rarely a need to call this method.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.ComputedWaitQueueSize">
      <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.ConnectionMode">
      <summary>
            Gets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.ConnectTimeout">
      <summary>
            Gets the connect timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.Create(System.String)">
      <summary>
            Creates an instance of MongoUrl (might be an existing existence if the same URL has been used before).
            </summary>
      <param name="url">The URL containing the settings.</param>
      <returns>An instance of MongoUrl.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.DatabaseName">
      <summary>
            Gets the optional database name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.Equals(MongoDB.Driver.MongoUrl)">
      <summary>
            Compares two MongoUrls.
            </summary>
      <param name="rhs">The other URL.</param>
      <returns>True if the two URLs are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.Equals(System.Object)">
      <summary>
            Compares two MongoUrls.
            </summary>
      <param name="obj">The other URL.</param>
      <returns>True if the two URLs are equal.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.FSync">
      <summary>
            Gets the FSync component of the write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.GetWriteConcern(System.Boolean)">
      <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
      <param name="enabledDefault">The default enabled value.</param>
      <returns>A WriteConcern.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.GuidRepresentation">
      <summary>
            Gets the representation to use for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.IPv6">
      <summary>
            Gets a value indicating whether to use IPv6.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Journal">
      <summary>
            Gets the Journal component of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.LocalThreshold">
      <summary>
            Gets the local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionIdleTime">
      <summary>
            Gets the max connection idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionLifeTime">
      <summary>
            Gets the max connection life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionPoolSize">
      <summary>
            Gets the max connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.MinConnectionPoolSize">
      <summary>
            Gets the min connection pool size.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.op_Equality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
      <summary>
            Compares two MongoUrls.
            </summary>
      <param name="lhs">The first URL.</param>
      <param name="rhs">The other URL.</param>
      <returns>True if the two URLs are equal (or both null).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.op_Inequality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
      <summary>
            Compares two MongoUrls.
            </summary>
      <param name="lhs">The first URL.</param>
      <param name="rhs">The other URL.</param>
      <returns>True if the two URLs are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Password">
      <summary>
            Gets the password.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.ReplicaSetName">
      <summary>
            Gets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Server">
      <summary>
            Gets the address of the server (see also Servers if using more than one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Servers">
      <summary>
            Gets the list of server addresses (see also Server if using only one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.SocketTimeout">
      <summary>
            Gets the socket timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrl.ToString">
      <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
      <returns>The canonical URL.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Url">
      <summary>
            Gets the URL (in canonical form).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.Username">
      <summary>
            Gets the username.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.UseSsl">
      <summary>
            Gets a value indicating whether to use SSL.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.VerifySslCertificate">
      <summary>
            Gets a value indicating whether to verify an SSL certificate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.W">
      <summary>
            Gets the W component of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.WaitQueueMultiple">
      <summary>
            Gets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.WaitQueueSize">
      <summary>
            Gets the wait queue size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.WaitQueueTimeout">
      <summary>
            Gets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrl.WTimeout">
      <summary>
            Gets the WTimeout component of the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoUrlBuilder">
      <summary>
            Represents URL style connection strings. This is the recommended connection string style, but see also
            MongoConnectionStringBuilder if you wish to use .NET style connection strings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor">
      <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor(System.String)">
      <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
      <param name="url">The initial settings.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanism">
      <summary>
            Gets or sets the authentication mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanismProperties">
      <summary>
            Gets or sets the authentication mechanism properties.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationSource">
      <summary>
            Gets or sets the authentication source.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.ComputedWaitQueueSize">
      <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectionMode">
      <summary>
            Gets or sets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.DatabaseName">
      <summary>
            Gets or sets the optional database name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.FSync">
      <summary>
            Gets or sets the FSync component of the write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.GetWriteConcern(System.Boolean)">
      <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
      <param name="enabledDefault">The default enabled value.</param>
      <returns>A WriteConcern.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.GuidRepresentation">
      <summary>
            Gets or sets the representation to use for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.IPv6">
      <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.Journal">
      <summary>
            Gets or sets the Journal component of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.LocalThreshold">
      <summary>
            Gets or sets the local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionIdleTime">
      <summary>
            Gets or sets the max connection idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionLifeTime">
      <summary>
            Gets or sets the max connection life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionPoolSize">
      <summary>
            Gets or sets the max connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.MinConnectionPoolSize">
      <summary>
            Gets or sets the min connection pool size.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.Parse(System.String)">
      <summary>
            Parses a URL and sets all settings to match the URL.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.Password">
      <summary>
            Gets or sets the password.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.ReplicaSetName">
      <summary>
            Gets or sets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.Server">
      <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.Servers">
      <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.SocketTimeout">
      <summary>
            Gets or sets the socket timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.ToMongoUrl">
      <summary>
            Creates a new instance of MongoUrl based on the settings in this MongoUrlBuilder.
            </summary>
      <returns>A new instance of MongoUrl.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUrlBuilder.ToString">
      <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
      <returns>The canonical URL.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.Username">
      <summary>
            Gets or sets the username.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.UseSsl">
      <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.VerifySslCertificate">
      <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.W">
      <summary>
            Gets or sets the W component of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueMultiple">
      <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueSize">
      <summary>
            Gets or sets the wait queue size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueTimeout">
      <summary>
            Gets or sets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUrlBuilder.WTimeout">
      <summary>
            Gets or sets the WTimeout component of the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoUtils">
      <summary>
            Various static utility methods.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUtils.Hash(System.String)">
      <summary>
            Gets the MD5 hash of a string.
            </summary>
      <param name="text">The string to get the MD5 hash of.</param>
      <returns>The MD5 hash.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUtils.TimeSpanFromMicroseconds(System.Int64)">
      <summary>
            Creates a TimeSpan from microseconds.
            </summary>
      <param name="microseconds">The microseconds.</param>
      <returns>The TimeSpan.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUtils.ToCamelCase(System.String)">
      <summary>
            Converts a string to camel case by lower casing the first letter (only the first letter is modified).
            </summary>
      <param name="value">The string to camel case.</param>
      <returns>The camel cased string.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoWriteException">
      <summary>
            Represents a write exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.WriteError,MongoDB.Driver.WriteConcernError,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="writeError">The write error.</param>
      <param name="writeConcernError">The write concern error.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoWriteException.WriteConcernError">
      <summary>
            Gets the write concern error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoWriteException.WriteError">
      <summary>
            Gets the write error.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.PasswordEvidence">
      <summary>
            Evidence of a MongoIdentity via a shared secret.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.Security.SecureString)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="M:MongoDB.Driver.PasswordEvidence.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="rhs">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.PasswordEvidence.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:MongoDB.Driver.PasswordEvidence.SecurePassword">
      <summary>
            Gets the password.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.RenameCollectionOptions">
      <summary>
            Options for renaming a collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.RenameCollectionOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.RenameCollectionOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.RenameCollectionOptions.DropTarget">
      <summary>
            Gets or sets a value indicating whether to drop the target collection first if it already exists.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReplaceOneModel`1">
      <summary>
            Model for replacing a single document.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.ReplaceOneModel`1.#ctor(System.Object,`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneModel`1" /> class.
            </summary>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneModel`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneModel`1.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneModel`1.Replacement">
      <summary>
            Gets the replacement.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReplaceOneResult">
      <summary>
            The result of an update operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReplaceOneResult.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReplaceOneResult.Acknowledged">
      <summary>
            The result of an acknowledged update operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReplaceOneResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult.Acknowledged" /> class.
            </summary>
      <param name="matchedCount">The matched count.</param>
      <param name="modifiedCount">The modified count.</param>
      <param name="upsertedId">The upserted id.</param>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReplaceOneResult.Unacknowledged">
      <summary>
            The result of an unacknowledged update operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReturnDocument">
      <summary>
            Which version of the document to return when executing a FindAndModify command.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReturnDocument.Before">
      <summary>
            Return the document before the modification.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReturnDocument.After">
      <summary>
            Return the document after the modification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Setting`1">
      <summary>
            Represents a setting that may or may not have been set.
            </summary>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.Setting`1.HasBeenSet">
      <summary>
            Gets a value indicating whether the setting has been set.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Setting`1.Reset">
      <summary>
            Resets the setting to the unset state.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Setting`1.ToString">
      <summary>
            Gets a canonical string representation for this setting.
            </summary>
      <returns>A canonical string representation for this setting.</returns>
    </member>
    <member name="P:MongoDB.Driver.Setting`1.Value">
      <summary>
            Gets the value of the setting.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SslSettings">
      <summary>
            Represents the settings for using SSL.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.SslSettings</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.SslSettings.CheckCertificateRevocation">
      <summary>
            Gets or sets a value indicating whether to check for certificate revocation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SslSettings.ClientCertificates">
      <summary>
            Gets or sets the client certificates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SslSettings.ClientCertificateSelectionCallback">
      <summary>
            Gets or sets the client certificate selection callback.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.Clone">
      <summary>
            Clones an SslSettings.
            </summary>
      <returns>The cloned SslSettings.</returns>
    </member>
    <member name="P:MongoDB.Driver.SslSettings.EnabledSslProtocols">
      <summary>
            Gets or sets the enabled SSL protocols.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.Equals(MongoDB.Driver.SslSettings)">
      <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:MongoDB.Driver.SslSettings" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.op_Equality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings" /> instances are equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.op_Inequality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings" /> instances are not equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.SslSettings.ServerCertificateValidationCallback">
      <summary>
            Gets or sets the server certificate validation callback.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SslSettings.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="T:MongoDB.Driver.UpdateManyModel`1">
      <summary>
            Model for updating many documents.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.UpdateManyModel`1.#ctor(System.Object,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateManyModel`1" /> class.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
    </member>
    <member name="P:MongoDB.Driver.UpdateManyModel`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateManyModel`1.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateManyModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateManyModel`1.Update">
      <summary>
            Gets the update.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateOneModel`1">
      <summary>
            Model for updating a single document.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.UpdateOneModel`1.#ctor(System.Object,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateOneModel`1" /> class.
            </summary>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
    </member>
    <member name="P:MongoDB.Driver.UpdateOneModel`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateOneModel`1.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateOneModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateOneModel`1.Update">
      <summary>
            Gets the update.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateOptions">
      <summary>
            Options for updating a single document.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.UpdateOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.UpdateOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateOptions.IsUpsert">
      <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateResult">
      <summary>
            The result of an update operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.UpdateResult.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateResult.Acknowledged">
      <summary>
            The result of an acknowledgede update operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.UpdateResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult.Acknowledged" /> class.
            </summary>
      <param name="matchedCount">The matched count.</param>
      <param name="modifiedCount">The modified count.</param>
      <param name="upsertedId">The upserted id.</param>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateResult.Unacknowledged">
      <summary>
            The result of an acknowledgede update operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the result is acknowleded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.MatchedCount">
      <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.ModifiedCount">
      <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.UpsertedId">
      <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteConcernError">
      <summary>
            Represents the details of a write concern error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernError.Code">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernError.Details">
      <summary>
            Gets the error information.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernError.Message">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteError">
      <summary>
            Represents the details of a write error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteError.Category">
      <summary>
            Gets the category.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteError.Code">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteError.Details">
      <summary>
            Gets the error details.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteError.Message">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteModel`1">
      <summary>
            Base class for a write model.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.WriteModel`1.ModelType">
      <summary>
            Gets the type of the model.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteModelType">
      <summary>
            The type of a write model.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.InsertOne">
      <summary>
            A model to insert a single document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.DeleteOne">
      <summary>
            A model to delete a single document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.DeleteMany">
      <summary>
            A model to delete multiple documents.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.ReplaceOne">
      <summary>
            A model to replace a single document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.UpdateOne">
      <summary>
            A model to update a single document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.WriteModelType.UpdateMany">
      <summary>
            A model to update many documents.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.BuilderBase">
      <summary>
            Abstract base class for the builders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.#ctor">
      <summary>
            Initializes a new instance of the BuilderBase class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Fields">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="name">The name.</param>
      <param name="query">The query.</param>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Exclude(System.String[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Include(System.String[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.MetaTextScore(System.String)">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="name">The name of the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Fields.Null">
      <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Fields`1">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">The element query builder function.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Fields`1.Null">
      <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.FieldsBuilder">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.#ctor">
      <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="name">The name.</param>
      <param name="query">The query.</param>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Exclude(System.String[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Include(System.String[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.MetaTextScore(System.String)">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="name">The name of the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.FieldsBuilder`1">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">The element query builder function.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeys">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Ascending(System.String[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Descending(System.String[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatial(System.String)">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String)">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String,System.String)">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <param name="additionalName">The name of an additional field to index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialSpherical(System.String)">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Hashed(System.String)">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Text(System.String[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="names">List of key names to include in the text index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeys`1">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="additionalMemberExpression">The additional member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.#ctor">
      <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Ascending(System.String[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Descending(System.String[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatial(System.String)">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String)">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String,System.String)">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <param name="additionalName">The name of an additional field to index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialSpherical(System.String)">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Hashed(System.String)">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Text(System.String[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="names">List of key names to include in the text index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder`1">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="memberExpressions">One or more key names.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="additionalMemberExpression">The additional member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.PushEachOptions">
      <summary>
            Arguments for $push with an $each clause.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Builders.PushEachOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Position">
      <summary>
            Gets or sets the position (see $position).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Slice">
      <summary>
            Gets or sets the slice (see $slice).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Sort">
      <summary>
            Gets or sets the sort (see $sort).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.PushEachOptionsBuilder`1">
      <summary>
            A fluent builder for PushEachOptions.
            </summary>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Build">
      <summary>
            Builds the PushEachArgs.
            </summary>
      <returns>A built PushEachOptions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Position(System.Int32)">
      <summary>
            Specifies the position for the array.
            </summary>
      <param name="position">The position.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Slice(System.Int32)">
      <summary>
            Specifies a slice for the array.
            </summary>
      <param name="slice">The slice.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortAscending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sorts the array in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sorts the array in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Query">
      <summary>
            A builder for creating queries.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.All(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.And(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Create(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates a query manually.
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Create(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Creates a query manually.
            </summary>
      <param name="name">The element name.</param>
      <param name="condition">The condition.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="query">The query to match elements with.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Query.Empty">
      <summary>
            Gets an empty query.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.EQ(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Exists(System.String)">
      <summary>
            Tests that an element of that name exists (see $exists).
            </summary>
      <param name="name">The name of the element to test.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GeoIntersects``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="name">The name.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GT(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GTE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.In(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.LT(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.LTE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Matches(System.String,MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Mod(System.String,System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Not(MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NotExists(System.String)">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="name">The name of the element to test.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NotIn(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Query.Null">
      <summary>
            Gets a null value with a type of IMongoQuery.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Or(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Size(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThan(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is greater than some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThanOrEqual(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is greater than or equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeLessThan(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is less than some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeLessThanOrEqual(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is less than or equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Text(System.String)">
      <summary>
            Generate a text search query that tests whether the given search string is present.
            </summary>
      <param name="searchString">The search string.</param>
      <returns>An IMongoQuery that represents the text search.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Text(System.String,System.String)">
      <summary>
            Generate a text search query that tests whether the given search string is present using the specified language's rules. 
            Specifies use of language appropriate stop words, stemming rules etc.
            </summary>
      <param name="searchString">The search string.</param>
      <param name="language">The language to restrict the search by.</param>
      <returns>An IMongoQuery that represents the text search for the particular language.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Type(System.String,MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="type">The type to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Where(MongoDB.Bson.BsonJavaScript)">
      <summary>
            Tests that a JavaScript expression is true (see $where).
            </summary>
      <param name="javascript">The javascript.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Within``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``0})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinPolygon(System.String,System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinRectangle(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Query`1">
      <summary>
            Aids in building mongo queries based on type information.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
      <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to compare.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="size">The size to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            Builds a query from an expression.
            </summary>
      <param name="expression">The expression.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.QueryBuilder`1">
      <summary>
            Aids in building mongo queries based on type information.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.QueryBuilder`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
      <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Not(MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to compare.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="size">The size to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            Builds a query from an expression.
            </summary>
      <param name="expression">The expression.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortBy">
      <summary>
            A builder for specifying a sort order.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.Ascending(System.String[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.Descending(System.String[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.MetaTextScore(System.String)">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="key">The name of the computed relevance score field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.SortBy.Null">
      <summary>
            Gets a null value with a type of IMongoSortBy.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortBy`1">
      <summary>
            A builder for specifying a sort order.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="memberExpression">The member expression specifying the projected field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortByBuilder">
      <summary>
            A builder for specifying a sort order.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.#ctor">
      <summary>
            Initializes a new instance of the SortByBuider class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.Ascending(System.String[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.Descending(System.String[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.MetaTextScore(System.String)">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="key">The name of the computed relevance score field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortByBuilder`1">
      <summary>
            A builder for specifying a sort order.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.SortByBuilder`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="memberExpression">The member expression specifying the projected field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Update">
      <summary>
            A builder for creating update modifiers.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSet(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the set.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Combine(MongoDB.Driver.IMongoUpdate[])">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <param name="type">The type to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Max(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Min(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PopFirst(System.String)">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PopLast(System.String)">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="query">A query that specifies which elements to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,``0[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullWrapped``1(System.String,``0)">
      <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to remove.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Push(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Rename(System.String,System.String)">
      <summary>
            Renames an element (see $rename).
            </summary>
      <param name="oldElementName">The name of the element to be renamed.</param>
      <param name="newElementName">The new name of the element.</param>
      <returns>An UpdateDocuemnt.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Replace(System.Type,System.Object)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="nominalType">The nominal type of the replacement document</param>
      <param name="document">The replacement document.</param>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Replace``1(``0)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="document">The replacement document.</param>
      <typeparam name="TNominalType">The nominal type of the replacement document</typeparam>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Set(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.SetWrapped``1(System.String,``0)">
      <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new wrapped value.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Unset(System.String)">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="name">The name of the element to be removed.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Update`1">
      <summary>
            A builder for creating update modifiers.
            </summary>
      <typeparam name="TDocument">The document type.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Combine(MongoDB.Driver.IMongoUpdate[])">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The updates to combine.</param>
      <returns>
            A combined UpdateBuilder.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>
            A combined UpdateBuilder.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Replace(`0)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="document">The replacement document.</param>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateBuilder">
      <summary>
            A builder for creating update modifiers.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.#ctor">
      <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSet(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the set.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Combine(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Combines another UpdateBuilder into this one.
            </summary>
      <param name="other">The IMongoUpdate to combine into this one.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <param name="type">The type to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Max(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Min(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopFirst(System.String)">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopLast(System.String)">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="query">A query that specifies which elements to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,``0[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullWrapped``1(System.String,``0)">
      <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to remove.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Push(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="args">The args.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="args">The args.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Rename(System.String,System.String)">
      <summary>
            Renames an element (see $rename).
            </summary>
      <param name="oldElementName">The old element name.</param>
      <param name="newElementName">The new element name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Set(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetWrapped``1(System.String,``0)">
      <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new wrapped value.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Unset(System.String)">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="name">The name of the element to be removed.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateBuilder`1">
      <summary>
            A builder for creating update modifiers.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Combine(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Combines another UpdateBuilder into this one.
            </summary>
      <param name="other">The UpdateBuilder to combine into this one.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateCurrentDateType">
      <summary>
            The type to use for the $currentDate type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Date">
      <summary>
            The date type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Timestamp">
      <summary>
            The timestamp type.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson">
      <summary>
            A static class containing helper methods to create GeoJson objects.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.BoundingBox``1(``0,``0)">
      <summary>
            Creates a GeoJson bounding box.
            </summary>
      <param name="min">The min.</param>
      <param name="max">The max.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson bounding box.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
      <summary>
            Creates a GeoJson Feature object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Feature object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
      <summary>
            Creates a GeoJson Feature object.
            </summary>
      <param name="geometry">The geometry.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Feature object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
      <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
      <param name="features">The features.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson FeatureCollection object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
      <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="features">The features.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson FeatureCollection object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double)">
      <summary>
            Creates a GeoJson 2D geographic position (longitude, latitude).
            </summary>
      <param name="longitude">The longitude.</param>
      <param name="latitude">The latitude.</param>
      <returns>A GeoJson 2D geographic position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double,System.Double)">
      <summary>
            Creates a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
      <param name="longitude">The longitude.</param>
      <param name="latitude">The latitude.</param>
      <param name="altitude">The altitude.</param>
      <returns>A GeoJson 3D geographic position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
      <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
      <param name="geometries">The geometries.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson GeometryCollection object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
      <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="geometries">The geometries.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson GeometryCollection object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LinearRingCoordinates``1(``0[])">
      <summary>
            Creates the coordinates of a GeoJson linear ring.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>The coordinates of a GeoJson linear ring.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
      <summary>
            Creates a GeoJson LineString object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson LineString object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(``0[])">
      <summary>
            Creates a GeoJson LineString object.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson LineString object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineStringCoordinates``1(``0[])">
      <summary>
            Creates the coordinates of a GeoJson LineString.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>The coordinates of a GeoJson LineString.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
      <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
      <param name="lineStrings">The line strings.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiLineString object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
      <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="lineStrings">The line strings.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiLineString object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
      <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiPoint object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(``0[])">
      <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiPoint object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
      <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="polygons">The polygons.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiPolygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
      <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
      <param name="polygons">The polygons.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson MultiPolygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0)">
      <summary>
            Creates a GeoJson Point object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Point object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(``0)">
      <summary>
            Creates a GeoJson Point object.
            </summary>
      <param name="coordinates">The coordinates.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Point object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
      <summary>
            Creates a GeoJson Polygon object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
      <summary>
            Creates a GeoJson Polygon object.
            </summary>
      <param name="args">The additional args.</param>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
      <summary>
            Creates a GeoJson Polygon object.
            </summary>
      <param name="coordinates">The coordinates.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(``0[])">
      <summary>
            Creates a GeoJson Polygon object.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>A GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0}[])">
      <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
      <param name="exterior">The exterior.</param>
      <param name="holes">The holes.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>The coordinates of a GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(``0[])">
      <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
      <param name="positions">The positions.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>The coordinates of a GeoJson Polygon object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double)">
      <summary>
            Creates a GeoJson 2D position (x, y).
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <returns>A GeoJson 2D position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double,System.Double)">
      <summary>
            Creates a GeoJson 3D position (x, y, z).
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <param name="z">The z.</param>
      <returns>A GeoJson 3D position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double)">
      <summary>
            Creates a GeoJson 2D projected position (easting, northing).
            </summary>
      <param name="easting">The easting.</param>
      <param name="northing">The northing.</param>
      <returns>A GeoJson 2D projected position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double,System.Double)">
      <summary>
            Creates a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
      <param name="easting">The easting.</param>
      <param name="northing">The northing.</param>
      <param name="altitude">The altitude.</param>
      <returns>A GeoJson 3D projected position.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates">
      <summary>
            Represents a GeoJson 2D position (x, y).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates" /> class.
            </summary>
      <param name="x">The x coordinate.</param>
      <param name="y">The y coordinate.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.X">
      <summary>
            Gets the X coordinate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Y">
      <summary>
            Gets the Y coordinate.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates">
      <summary>
            Represents a GeoJson 2D geographic position (longitude, latitude).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates" /> class.
            </summary>
      <param name="longitude">The longitude.</param>
      <param name="latitude">The latitude.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Latitude">
      <summary>
            Gets the latitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Longitude">
      <summary>
            Gets the longitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates">
      <summary>
            Represents a GeoJson 2D projected position (easting, northing).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates" /> class.
            </summary>
      <param name="easting">The easting.</param>
      <param name="northing">The northing.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Easting">
      <summary>
            Gets the easting.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Northing">
      <summary>
            Gets the northing.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates">
      <summary>
            Represents a GeoJson 3D position (x, y, z).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates" /> class.
            </summary>
      <param name="x">The x coordinate.</param>
      <param name="y">The y coordinate.</param>
      <param name="z">The z coordinate.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.X">
      <summary>
            Gets the X coordinate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Y">
      <summary>
            Gets the Y coordinate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Z">
      <summary>
            Gets the Z coordinate.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates">
      <summary>
            Represents a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates" /> class.
            </summary>
      <param name="longitude">The longitude.</param>
      <param name="latitude">The latitude.</param>
      <param name="altitude">The altitude.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Altitude">
      <summary>
            Gets the altitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Latitude">
      <summary>
            Gets the latitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Longitude">
      <summary>
            Gets the longitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates">
      <summary>
            Represents a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates" /> class.
            </summary>
      <param name="easting">The easting.</param>
      <param name="northing">The northing.</param>
      <param name="altitude">The altitude.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Altitude">
      <summary>
            Gets the altitude.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Easting">
      <summary>
            Gets the easting.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Northing">
      <summary>
            Gets the northing.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1">
      <summary>
            Represents a GeoJson bounding box.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.#ctor(`0,`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1" /> class.
            </summary>
      <param name="min">The min.</param>
      <param name="max">The max.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Max">
      <summary>
            Gets the max.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Min">
      <summary>
            Gets the min.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem">
      <summary>
            Represents a GeoJson coordinate reference system (see subclasses).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem.Type">
      <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates">
      <summary>
            Represents a GeoJson position in some coordinate system (see subclasses).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
      <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Equality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> instances are equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Inequality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> instances are not equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Values">
      <summary>
            Gets the coordinate values.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1">
      <summary>
            Represents a GeoJson Feature object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="geometry">The geometry.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1" /> class.
            </summary>
      <param name="geometry">The geometry.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Geometry">
      <summary>
            Gets the geometry.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Id">
      <summary>
            Gets the id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Properties">
      <summary>
            Gets the properties.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1">
      <summary>
            Represents additional arguments for a GeoJson Feature object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Id">
      <summary>
            Gets or sets the id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Properties">
      <summary>
            Gets or sets the properties.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1">
      <summary>
            Represents a GeoJson FeatureCollection.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="features">The features.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1" /> class.
            </summary>
      <param name="features">The features.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Features">
      <summary>
            Gets the features.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1">
      <summary>
            Represents a GeoJson Geometry object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1">
      <summary>
            Represents a GeoJson GeometryCollection object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="geometries">The geometries.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1" /> class.
            </summary>
      <param name="geometries">The geometries.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Geometries">
      <summary>
            Gets the geometries.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson linear ring.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1" /> class.
            </summary>
      <param name="positions">The positions.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1">
      <summary>
            Represents a GeoJson LineString object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson LineString object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1" /> class.
            </summary>
      <param name="positions">The positions.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.Positions">
      <summary>
            Gets the positions.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem">
      <summary>
            Represents a GeoJson linked coordinate reference system.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem" /> class.
            </summary>
      <param name="href">The href.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem" /> class.
            </summary>
      <param name="href">The href.</param>
      <param name="hrefType">Type of the href.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRef">
      <summary>
            Gets the href.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRefType">
      <summary>
            Gets the type of the href.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.Type">
      <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1">
      <summary>
            Represents a GeoJson MultiLineString object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson MultiLineString object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1" /> class.
            </summary>
      <param name="lineStrings">The line strings.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.LineStrings">
      <summary>
            Gets the LineStrings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1">
      <summary>
            Represents a GeoJson MultiPoint object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson MultiPoint object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1" /> class.
            </summary>
      <param name="positions">The positions.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.Positions">
      <summary>
            Gets the positions.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1">
      <summary>
            Represents a GeoJson MultiPolygon object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson MultiPolygon object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1" /> class.
            </summary>
      <param name="polygons">The polygons.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.Polygons">
      <summary>
            Gets the Polygons.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem">
      <summary>
            Represents a GeoJson named coordinate reference system.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem" /> class.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Type">
      <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1">
      <summary>
            Represents a GeoJson object (see subclasses).
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.BoundingBox">
      <summary>
            Gets the bounding box.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.CoordinateReferenceSystem">
      <summary>
            Gets the coordinate reference system.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.ExtraMembers">
      <summary>
            Gets the extra members.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1">
      <summary>
            Represents additional args provided when creating a GeoJson object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.BoundingBox">
      <summary>
            Gets or sets the bounding box.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.CoordinateReferenceSystem">
      <summary>
            Gets or sets the coordinate reference system.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.ExtraMembers">
      <summary>
            Gets or sets the extra members.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType">
      <summary>
            Represents the type of a GeoJson object.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Feature">
      <summary>
            A Feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.FeatureCollection">
      <summary>
            A FeatureCollection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.GeometryCollection">
      <summary>
            A GeometryCollection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.LineString">
      <summary>
            A LineString.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiLineString">
      <summary>
            A MultiLineString.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPoint">
      <summary>
            A MultiPoint.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPolygon">
      <summary>
            A MultiPolygon.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Point">
      <summary>
            A Point.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Polygon">
      <summary>
            A Polygon.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1">
      <summary>
            Represents a GeoJson Point object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1">
      <summary>
            Represents a GeoJson Polygon object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1" /> class.
            </summary>
      <param name="args">The additional args.</param>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1" /> class.
            </summary>
      <param name="coordinates">The coordinates.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Coordinates">
      <summary>
            Gets the coordinates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Type">
      <summary>
            Gets the type of the GeoJson object.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1">
      <summary>
            Represents the coordinates of a GeoJson Polygon object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1" /> class.
            </summary>
      <param name="exterior">The exterior.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1" /> class.
            </summary>
      <param name="exterior">The exterior.</param>
      <param name="holes">The holes.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Exterior">
      <summary>
            Gets the exterior.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Holes">
      <summary>
            Gets the holes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson2DCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson2DGeographicCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson2DProjectedCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson3DCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson3DGeographicCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJson3DProjectedCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonBoundingBox value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer">
      <summary>
            Represents a serializer for a GeoJsonCoordinateReferenceSystem value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
      <summary>
            Gets the actual type.
            </summary>
      <param name="context">The context.</param>
      <returns>The actual type.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer">
      <summary>
            Represents a serializer for a GeoJsonCoordinates value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
      <summary>
            Gets the actual type.
            </summary>
      <param name="context">The context.</param>
      <returns>The actual type.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonFeatureCollection value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonFeature value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonGeometryCollection value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1">
      <summary>
            Represents a serializer for a GeoJsonGeometry value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
      <summary>
            Gets the actual type.
            </summary>
      <param name="context">The context.</param>
      <returns>The actual type.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonLinearRingCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonLineStringCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonLineString value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer">
      <summary>
            Represents a serializer for a GeoJsonLinkedCoordinateReferenceSystem value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a class.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>An object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiLineStringCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiLineString value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiPointCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiPoint value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiPolygonCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonMultiPolygon value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer">
      <summary>
            Represents a serializer for a GeoJsonNamedCoordinateReferenceSystem value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a class.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>An object.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem)">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1">
      <summary>
            Represents a serializer for a GeoJson object.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
      <summary>
            Gets the actual type.
            </summary>
      <param name="context">The context.</param>
      <returns>The actual type.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1">
      <summary>
            Represents a serializer helper for GeoJsonObjects.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.#ctor(System.String,MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member[])">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1" /> class.
            </summary>
      <param name="type">The type.</param>
      <param name="derivedMembers">The derived members.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.DeserializeBaseMember(MongoDB.Bson.Serialization.BsonDeserializationContext,System.String,System.Int64,MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
      <summary>
            Deserializes a base member.
            </summary>
      <param name="context">The context.</param>
      <param name="elementName">The element name.</param>
      <param name="flag">The flag.</param>
      <param name="args">The arguments.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.SerializeMembers``1(MongoDB.Bson.Serialization.BsonSerializationContext,``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext,``0})">
      <summary>
            Serializes the members.
            </summary>
      <param name="context">The context.</param>
      <param name="value">The value.</param>
      <param name="serializeDerivedMembers">The delegate to serialize the derived members.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonPoint value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonPolygonCoordinates value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1">
      <summary>
            Represents a serializer for a GeoJsonPolygon value.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{`0})">
      <summary>
            Serializes a value.
            </summary>
      <param name="context">The serialization context.</param>
      <param name="args">The serialization args.</param>
      <param name="value">The value.</param>
    </member>
    <member name="T:MongoDB.Driver.Linq.DeserializationProjector`1">
      <summary>
            Represents a projection that deserializes BsonValues.
            </summary>
      <typeparam name="TResult">The type of the result objects.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue},MongoDB.Bson.Serialization.BsonSerializationInfo)">
      <summary>
            Initializes a new instance of the DeserializationProjector class.
            </summary>
      <param name="source">The enumerable object that supplies the source objects.</param>
      <param name="serializationInfo">Serialization info for deserializing source objects into result objects.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.GetEnumerator">
      <summary>
            Gets an enumerator for the result objects.
            </summary>
      <returns>An enumerator for the result objects.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionFormatter">
      <summary>
            A class that formats an Expression as a string.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.#ctor">
      <summary>
            Initializes a new instance of the ExpressionFormatter class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString">
      <summary>
            Returns a string that represents the Expression.
            </summary>
      <returns>A string that represents the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString(System.Linq.Expressions.Expression)">
      <summary>
            Returns a string that represents the Expression.
            </summary>
      <param name="node">The Expression to format.</param>
      <returns>A string that represents the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit node.
            </summary>
      <param name="node">The ElementInit node.</param>
      <returns>The ElementInit node.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionNormalizer">
      <summary>
            A class that normalizes C# and VB expression trees.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.Normalize(System.Linq.Expressions.Expression)">
      <summary>
            Normalizes C# and VB expression trees.
            </summary>
      <param name="node">The expression to normalize.</param>
      <returns>The normalized expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression (possibly modified).</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionParameterReplacer">
      <summary>
            A class that replaces all occurences of one parameter with a different parameter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
      <summary>
            Initializes a new instance of the ExpressionParameterReplacer class.
            </summary>
      <param name="fromParameter">The parameter to be replaced.</param>
      <param name="toExpression">The expression that replaces the parameter.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.ReplaceParameter(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
      <summary>
            Replaces all occurences of one parameter with a different parameter.
            </summary>
      <param name="node">The expression containing the parameter that should be replaced.</param>
      <param name="fromParameter">The from parameter.</param>
      <param name="toExpression">The expression that replaces the parameter.</param>
      <returns>The expression with all occurrences of the parameter replaced.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Replaces the from parameter with the two parameter if it maches.
            </summary>
      <param name="node">The node.</param>
      <returns>The parameter (replaced if it matched).</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionPrettyPrinter">
      <summary>
            A class that pretty prints an Expression.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.#ctor">
      <summary>
            Initializes a new instance of the ExpressionPrettyPrinter class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.PrettyPrint(System.Linq.Expressions.Expression)">
      <summary>
            Pretty prints an Expression.
            </summary>
      <param name="node">The Expression to pretty print.</param>
      <returns>A string containing the pretty printed Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.ToString">
      <summary>
            Returns the pretty printed string representation of the Expression.
            </summary>
      <returns>The pretty printed string representation of the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit node.
            </summary>
      <param name="node">The ElementInit node.</param>
      <returns>The ElementInit node.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionVisitor">
      <summary>
            An abstract base class for an Expression visitor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.#ctor">
      <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
      <summary>
            Visits an Expression list.
            </summary>
      <param name="nodes">The Expression list.</param>
      <returns>The Expression list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
      <summary>
            Visits an Expression.
            </summary>
      <param name="node">The Expression.</param>
      <returns>The Expression (posibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit.
            </summary>
      <param name="node">The ElementInit.</param>
      <returns>The ElementInit (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression (possibly modified).</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionVisitor`1">
      <summary>
            An abstract base class for an Expression visitor that returns a value of type T.
            </summary>
      <typeparam name="T">The type of the return value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.#ctor">
      <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
      <summary>
            Visits an Expression list.
            </summary>
      <param name="nodes">The Expression list.</param>
      <returns>The result of visiting the Expressions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Linq.Expressions.Expression)">
      <summary>
            Visits an Expression.
            </summary>
      <param name="node">The Expression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit.
            </summary>
      <param name="node">The ElementInit.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The result of visiting the Expressions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.LinqToMongo">
      <summary>
            This static class holds methods that can be used to express MongoDB specific query operations in LINQ queries.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a sequence contains all of the specified values.
            </summary>
      <param name="source">A sequence in which to locate the values.</param>
      <param name="values">The values to locate in the sequence.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the sequence contains all of the specified values.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a sequence contains any of the specified values.
            </summary>
      <param name="source">A sequence in which to locate the values.</param>
      <param name="values">The values to locate in the sequence.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the sequence contains any of the specified values.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a specified value is contained in a sequence.
            </summary>
      <param name="value">The value to locate in the sequence.</param>
      <param name="source">A sequence in which to locate the values.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the value is contained in the sequence.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.Inject(MongoDB.Driver.IMongoQuery)">
      <summary>
            Injects a low level IMongoQuery into a LINQ where clause. Can only be used in LINQ queries.
            </summary>
      <param name="query">The low level query.</param>
      <returns>Throws an InvalidOperationException if called.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},MongoDB.Bson.BsonDocument)">
      <summary>
            Sets an index hint on the query that's being built.
            </summary>
      <param name="source">The query being built.</param>
      <param name="indexHint">Hint for what index to use.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>New query where the expression includes a WithIndex method call.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},System.String)">
      <summary>
            Sets an index hint on the query that's being built.
            </summary>
      <param name="source">The query being built.</param>
      <param name="indexName">The name of the index to use.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>New query where the expression includes a WithIndex method call.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.OrderByClause">
      <summary>
            Represents an order by clause.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.OrderByClause.#ctor(System.Linq.Expressions.LambdaExpression,MongoDB.Driver.Linq.OrderByDirection)">
      <summary>
            Initializes an instance of the OrderByClause class.
            </summary>
      <param name="key">An expression identifying the key of the order by clause.</param>
      <param name="direction">The direction of the order by clause.</param>
    </member>
    <member name="P:MongoDB.Driver.Linq.OrderByClause.Direction">
      <summary>
            Gets the direction of the order by clause.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.OrderByClause.Key">
      <summary>
            Gets the lambda expression identifying the key of the order by clause.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Linq.OrderByDirection">
      <summary>
            Represents the direction of an order by clause.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Linq.OrderByDirection.Ascending">
      <summary>
            Ascending order.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Linq.OrderByDirection.Descending">
      <summary>
            Descending order.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Linq.PartialEvaluator">
      <summary>
            A static class with methods to partially evaluate an Expression.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.PartialEvaluator.Evaluate(System.Linq.Expressions.Expression)">
      <summary>
            Performs evaluation and replacement of independent sub-trees.
            </summary>
      <param name="expression">The root of the expression tree.</param>
      <returns>A new tree with sub-trees evaluated and replaced.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.PartialEvaluator.Evaluate(System.Linq.Expressions.Expression,System.Linq.IQueryProvider)">
      <summary>
            Performs evaluation and replacement of independent sub-trees.
            </summary>
      <param name="expression">The root of the expression tree.</param>
      <param name="queryProvider">The query provider when the expression is a LINQ query (can be null).</param>
      <returns>A new tree with sub-trees evaluated and replaced.</returns>
    </member>
  </members>
</doc>